buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-diagram:1.5.4'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE'
    }
}

import org.asciidoctor.gradle.AsciidoctorTask

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.asciidoctor.convert'

asciidoctorj {
    version = '1.5.4.1'
}

dependencies {
    asciidoctor 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.14'
    compile project(':ontrack-dsl')
    compile project(':ontrack-json')
    compile 'commons-io:commons-io'
}

if (documentationProfile) {

    task generateDoc(type: JavaExec) {
        dependsOn 'classes'
        dependsOn ':ontrack-dsl:classes'
        main = 'net.nemerosa.ontrack.docs.DSLDocGenerator'
        classpath = sourceSets.main.runtimeClasspath
        args = [
                project(':ontrack-dsl').file('src/main/groovy'),
                'build/dsl',
        ]

        inputs.dir project(':ontrack-dsl').file('src/main/groovy')
        outputs.dir 'build/dsl'
    }

    task prepareGeneratedDoc(type: Copy) {
        dependsOn 'generateDoc'
        from 'build/dsl'
        include '*.adoc'
        into 'src/docs/asciidoc/generated'
    }

    // HTML specific settings
    task generateHtml(type: AsciidoctorTask, description: 'Generates HTML documentation.', group: 'Documentation') {
        backend = 'html5'
        attributes = [
                'ontrack-version'    : project.versioning.info.display,
                'spring-boot-version': springBootVersion, // Defined in dependencies.gradle
                'icons'              : 'font',
        ]
    }

    // PDF specific settings
    task generatePdf(type: AsciidoctorTask, description: 'Generates PDF documentation.', group: 'Documentation') {
        mustRunAfter 'generateHtml'
        backend = 'pdf'
        attributes = [
                'ontrack-version'    : project.versioning.info.display,
                'spring-boot-version': springBootVersion, // Defined in dependencies.gradle
                'icons'              : 'font',
                'imagesdir'          : file('build/asciidoc/html5'),
        ]
    }

    // common Asciidoctor settings
    tasks.withType(AsciidoctorTask) { docTask ->
        dependsOn 'prepareGeneratedDoc'
        requires 'asciidoctor-diagram'
        logDocuments = true
        sources {
            include 'index.adoc'
        }
    }

    build.dependsOn 'generateHtml'
    build.dependsOn 'generatePdf'

    rootProject.tasks.publicationPackage {
        dependsOn generateHtml
        dependsOn generatePdf
        from("${generateHtml.outputDir}/html5") {
            into 'html5'
        }
        from("${generatePdf.outputDir}/pdf") {
            include '*.pdf'
            into 'pdf'
        }
    }
}
